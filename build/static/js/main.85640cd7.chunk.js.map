{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","items","setItems","quearyElastic","setQuearyElastic","pages","setPages","current_page","setCurrentPage","size","setSize","next","setNext","back","setBack","fullname","setFullName","email","setEmail","city","setCity","loading","setLoading","load","a","url","axios","get","request","data","previus","loadCallback","useCallback","useEffect","paginate","Fragment","className","href","target","xs","style","margin","display","justifyContent","alignItems","flex","placeholder","onChange","v","value","onClick","marginLeft","marginTop","label","URL","filter","map","item","_id","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85640cd7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"emerald-ui/lib/styles.css\";\nimport Table from \"emerald-ui/lib/Table\";\nimport Container from \"emerald-ui/lib/Container\";\nimport Row from \"emerald-ui/lib/Row\";\nimport Col from \"emerald-ui/lib/Col\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"emerald-ui/lib/Spinner\";\nimport Button from \"emerald-ui/lib/Button\";\nimport PageHeader from \"emerald-ui/lib/PageHeader\";\nimport TextField from \"emerald-ui/lib/TextField\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [quearyElastic, setQuearyElastic] = useState(\"\");\n\n  const [pages, setPages] = useState(0);\n  const [current_page, setCurrentPage] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const [next, setNext] = useState(null);\n  const [back, setBack] = useState(null);\n\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const load = async (\n    url = \"http://localhost:5000/api/v1/users?offset=0&limit=10\"\n  ) => {\n    try {\n      setSize(0);\n      setNext(null);\n      setBack(null);\n      setLoading(true);\n      const request = await axios.get(url);\n      setItems(request.data.items);\n      setLoading(false);\n\n      if (request.data.pages) {\n        setPages(request.data.pages);\n      }\n\n      if (request.data.current_page) {\n        setCurrentPage(request.data.current_page);\n      }\n\n      if (request.data.next) {\n        setNext(request.data.next);\n      }\n      if (request.data.size) {\n        setSize(request.data.size);\n      }\n\n      if (request.data.previus) {\n        setBack(request.data.previus);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n  const loadCallback = useCallback(load, []);\n\n  useEffect(() => {\n    loadCallback();\n  }, []);\n\n  const paginate = (a) => {\n    if (a < 0) {\n      load(back);\n    } else if (a > 0) {\n      load(next);\n    }\n  };\n\n  const filter = () => {\n    let URL = \"http://localhost:5000/api/v1/users?offset=0&limit=10\";\n    if (fullname != \"\") {\n      URL += `&fullname=${fullname}`;\n    }\n    if (city != \"\") {\n      URL += `&city=${city}`;\n    }\n    if (email != \"\") {\n      URL += `&email=${email}`;\n    }\n    load(URL);\n  };\n\n  const searchElastic = () => {\n    let URL = \"http://localhost:5000/api/v1/users/fast?q=\" + quearyElastic;\n    load(URL);\n  };\n\n  const renderItems = () => {\n    return items.map((item) => (\n      <tr key={item._id}>\n        <td>{item.fullname}</td>\n        <td>{item.city}</td>\n        <td>{item.email}</td>\n      </tr>\n    ));\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <ol className=\"breadcrumb\">\n          <li>\n            <a href=\"https://github.com/evaldovega/basic-api\" target=\"blank\">\n              <span className=\"chevron-back\"></span>\n              Evaldo Vega Vivanco\n            </a>\n          </li>\n        </ol>\n        <h1>Backend Basic</h1>\n      </PageHeader>\n\n      <Container>\n        <p></p>\n\n        <Row>\n          <Col xs={2} className=\"sample-col\"></Col>\n          <Col xs={8} className=\"sample-col\">\n            {loading && (\n              <Spinner style={{ margin: \"0 auto\", display: \"block\" }} />\n            )}\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextField\n                style={{ flex: 1, margin: 0 }}\n                placeholder=\"I feel lucky with elasticsearch\"\n                onChange={(v) => setQuearyElastic(v.target.value)}\n              />\n              <Button\n                onClick={() => searchElastic()}\n                style={{ marginLeft: 16 }}\n              >\n                GO!\n              </Button>\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextField\n                style={{ marginTop: 0 }}\n                onChange={(v) => setFullName(v.target.value)}\n                label=\"Fullname\"\n              />\n              <TextField\n                style={{ marginTop: 0 }}\n                onChange={(v) => setCity(v.target.value)}\n                label=\"City\"\n              />\n              <TextField\n                style={{ marginTop: 0 }}\n                onChange={(v) => setEmail(v.target.value)}\n                label=\"Email\"\n              />\n              <Button onClick={() => filter()}>Search</Button>\n            </div>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Fullname</th>\n                  <th>City</th>\n                  <th>Email</th>\n                </tr>\n              </thead>\n              <tbody>{renderItems()}</tbody>\n            </Table>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                marginTop: 16,\n              }}\n            >\n              <Button disabled={!back} onClick={() => paginate(-1)}>\n                Previus\n              </Button>\n              <span>\n                {current_page} / {pages}\n              </span>\n              <Button disabled={!next} onClick={() => paginate(1)}>\n                Next\n              </Button>\n              <span>\n                Users <b>{size}</b>\n              </span>\n            </div>\n          </Col>\n          <Col xs={2} className=\"sample-col\"></Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}